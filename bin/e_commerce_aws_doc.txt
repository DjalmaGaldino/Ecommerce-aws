Agora que as nossas duas estacas estão criadas, vamos de fato fazer o deployment fazer a instalação

delas na WS.

Mas primeiro a gente ainda precisa fazer algumas coisas aqui no nosso projeto.

Nós temos aqui as nossas duas estacas, a Steck, que cria primeiramente aqui a função de produto.

Nós já sabemos que vamos ter outros recursos aqui dentro dessa Steck.

E também temos aqui a Steck, que criou o nosso IP e gente fazendo então a integração com a nossa função.

E aqui no arquivo, na pasta BIM eCommerce IPI, nós temos uma Steck já criada aqui dentro.

Eu já havia comentado que esse é o ponto de entrada da nossa aplicação.

Quando nós fomos executar esse projeto do CBK para de fato fazer o deployment dos recursos na WS.

É por aqui que ele vai começar.

Então, é aqui que nós devemos criar as nossas estacas, criar as instâncias das nossas classes que

representam as nossas terras e o template do projeto.

Quando nós criamos o projeto, você já havia criado para a gente aqui uma stack como exemplo.

Nós não vamos utilizar essa Steck.

Então eu posso apagar esse arquivo que está na pasta lib, esse que veio com o nome da pasta.

Inclusive vou apagar esse arquivo aqui e também vou apagar a referência desse arquivo dessa classe aqui

no arquivo da pasta.

Apagar que eu não preciso mais criar essa estética.

Que nós vamos fazer aqui de fato e criar as nossas duas estacas que representam os recursos que nós

já vínhamos criar.

Então eu vou começar colocando, fazendo o importe dessas duas classes aqui.

Então eu vou colocar aqui o nome das duas classes que nós temos.

A primeira delas é products.

Happy Stack está dentro da pasta.

Libby Stack é a outra classe que nós criamos, que representa a stack do nosso ecommerce.

API step aqui, então as nossas duas.

Classes que a gente pode utilizar e aqui nós devemos criar instâncias dessas duas classes.

Agora é necessário haver um certo entendimento de qual é a Cetec que deve ser criada primeiro.

Lembre se que quando eu estava comentando sobre Cloud Formation e suas teses, eu havia comentado que

as estatais podem ter dependências entre elas.

O fato é que essa Eztec do e-commerce, ela precisa receber um parâmetro daqui da Steck de produtos,

que é justamente a função de produtos de busca de produtos.

Olha só, ela recebe como parâmetro.

Através dessa interface, recebe como parâmetro aquela função.

Logo, essa stack aqui vai depender dessa.

Daqui eu vou começar criando por essa Eztec aqui, mas eu também posso fazer o seguinte todos os recursos

que eu for criar aqui na WS eu preciso escolher qual é a região e a conta que eu quero fazer o deployment

desses recursos.

Voltando aqui para o console da WS, nós vemos que eu tenho aqui no canto superior direito, embaixo

do meu nome.

Eu tenho qual que é a região?

Aliás, qualquer wind da minha conta na WS, eu também tenho aqui a informação de qual e quais são as

regiões disponíveis que eu posso fazer a instalação desses recursos na WS?

Então eu vou passar já deixar fixo aqui dentro de uma constante.

Eu vou chamar MV de Environment de ambiente.

Qual que é essas, essas duas informações?

Aqui vou criar uma constante que do tipo Setec Environment e definir que a conta que eu vou utilizar

aqui vai ser justamente aquela conta que eu estou utilizando um botãozinho aqui para você poder copiar.

E aí eu vou colocar esse valor aqui.

É óbvio que você deve colocar aqui o identificador da sua conta na WS, não o que eu estou mostrando

aqui no vídeo e eu vou colocar aqui também.

Qualquer região eu vou utilizar essa região.

Aqui é o IST, onde é, onde eu vou colocar os meus recursos.

Eu posso escolher outra região se eu quiser.

Eu vou colocar aqui nessa região.

Então todos os recursos, todas as taxas que eu for criar aqui dentro, eu vou passar essa constante

aqui dizendo olha, eu quero criar esses essa até que esses recursos dentro dessa região e dentro dessa

conta.

Se você tivesse ambiente de desenvolvimento, ambiente, de teste de produção, você poderia variar

esses valores aqui de acordo com esses ambientes.

Ok, e eu também quero criar todos os meus recursos aqui.

Eu quero colocar uma tag em uma etiqueta dizendo Olha, esse recurso pertence a esse projeto ou esse

recurso foi criado por esse time?

Por que eu gostaria de fazer isso daí?

Mais adiante, nós nós teremos uma seção específica para falar sobre controle de custos na WS.

E essas etiquetas?

Essas tags são extremamente importantes para a gente poder fazer esse controle de custo.

Então eu vou cuidar aqui também, uma outra constante para definir justamente essas tags.

Aqui eu sou livre para colocar os parâmetros que eu quiser.

Então, eu vou dizer aqui, por exemplo, que um centro de custo é o nome mais comum que se utiliza

para esse tipo de coisa.

É o projeto ecommerce.

Posso colocar a tag que eu quiser com o valor que eu quiser e eu vou colocar aqui também que o time

que foi responsável por criar é o time, disse Heckler Koch.

Então eu vou também todos os recursos e todas as stacks que eu criar eu vou colocar essas tags aqui.

Além dessas variáveis de ambiente aqui.

Mas vamos então criar a nossa primeira extent.

Então, eu vou tirar aqui uma constante para representar a stack.

Do EP de produtos estava chamar Kit de Products EP Stack.

O que vai ser uma nova instância da minha classe?

Products Up Step É aqui o que eu tenho que passar.

Comparando o escopo que eu já havia comentado, o escopo de uma stack e o EP CD no qual está inserido.

Vou passar aqui o EP e aqui a identificação, o nome de fato da STEC.

Vou chamar aqui de Products EP e eu quero.

Também aqui posso definir propriedades.

Veja que não é obrigatório.

O terceiro parâmetro aqui não é obrigatório, mas eu posso definir que algumas propriedades.

Quais são elas?

Bem, eu posso definir justamente quais são as tags que eu quero colocar nos recursos e na estética

que eu estou criando.

Eu vou usar aqui a minha constante e eu já reaproveitam essas tags em outras estéticas.

E vou passar também aqui a minha variável de ambiente que contém a região e a conta da WS, no qual

eu quero fazer o deployment desse recurso.

Ok, ok, eu quando eu executar esse projeto, do jeito que ele está aqui, ele vai criar essa Eztec,

todos os recursos que estão lá dentro.

Ou seja, por enquanto, só a nossa função de produtos.

Mas eu também preciso criar aqui a outra STEC que eu tenho no meu projeto e comecei a Step, então vou

fazer a mesma coisa.

Eu vou criar aqui uma constante para representar.

Aquela instância, então 1000 e Comercial-PI Stack.

E aqui eu vou passar de novo aqueles parâmetros.

O escopo que é OFOCD e k.

O nome da Steck eu vou chamar de ecommerce como IPI.

E aqui veja que aqui eu já tenho um parâmetro que é obrigatório.

Diferentemente aqui, da classe que representa a estética de produtos, eu havia colocado que essa terceira

propriedade aqui ela seria obrigatória.

Ou retirei aqui a interrogação que estava aqui passando a ser obrigatório?

Então esse atributo eu preciso colocar com certeza que esse atributo é o que ele pede como obrigatório,

justamente a função de produtos.

E como é que eu vou poder obter aqui agora a função de produtos?

Bem, se você se lembrar aqui da função da Steck, que criou a função de produtos, nós colocamos um

atributo de classe aqui e olha só product father handler que representa aquela função.

E aqui então eu posso resgatar.

Eu posso pegar aqui a instância da minha Steck de produtos e obter justamente aquele produto de renda.

Pronto, já estou passando aqui a instância da minha função para dentro da minha Steck, que criei o

meu IP http.

Com isso, eu, o que eu faço?

Eu consigo criar a minha integração que consiga, por sua vez, redirecionar a requisição no endereço

barra produtos com verba da TB Get.

É assim que a gente consegue fazer a passagem de parâmetro entre estoques aqui no projeto do Cetec,

quando as taxas estão criadas dentro do mesmo projeto, obviamente eu posso passar aqui também outros

parâmetros.

Por exemplo, as mesmas tags minha.

Quero colocar aqui também as tags para eu poder controlar o custo desse viajante e as variáveis de ambiente

que vão definir onde corre ou conta.

E corrijam isso aqui.

Esses recursos serão criados?

Ok, mas tem uma coisa mais se essa Steck, ela precisa de um parâmetro que veio de uma outra.

Steck Eu posso deixar então dizer que essa Steck depende da criação dessa daqui.

Eu posso deixar isso explícito.

Eu posso vir aqui dizer que a Steck do ecommerce e IPI dela depende.

Ela tem uma dependência com a Steck Produtos EP?

Steck Eu estou deixando explícito que a nossa, essa Steck aqui, ela depende dessa outra Steck aqui.

Isso faz com que você saiba.

Então eu não posso começar a criar essa Steck antes dessa daqui.

É um pouco óbvio, porque tem um atributo que vai fazer a sua organização.

Mas nem sempre isso está, está claro.

Aqui a gente deixa claro eu gosto sempre de colocar essa dependência quando, mesmo mesmo que não esteja

claro que mesmo que não esteja implícito aqui, tudo bem.